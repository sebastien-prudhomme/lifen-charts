image:
  repository: honestica/kube-iptables-tailer
  tag: master-44
  pullPolicy: IfNotPresent

nameOverride: ""
fullnameOverride: ""

# Specify to use specific priorityClass for pods
# ref: https://kubernetes.io/docs/concepts/configuration/pod-priority-preemption/
# If a Pod cannot be scheduled, the scheduler tries to preempt (evict) lower priority
# Pods to make scheduling of the pending Pod possible.
priorityClassName: ""

# Only one of the next configuration should be enabled
# iptablesLogPath: "/var/log/iptables.log"
journalDirectory: "/var/log/journal"

iptablesLogPrefix: "calico-packet:"
kubeApiServicer: "https://kubernetes.default:443"


# iptablesLogPath: "/var/log/kern.log"
journalDirectory: "/var/log/journal"
iptablesLogPrefix: "calico-packet:"
kubeApiServicer: "https://kubernetes.default:443"

podAnnotations: {}
  # prometheus.io/scrape: "true"
  # prometheus.io/port: "9090"

rbac:
  create: true

serviceAccount:
  create: true
  name:

calico:
  loggingEnable: true
  # check your apiversion with `kubectl api-versions`
  apiVersion: crd.projectcalico.org/v1

resources:
  limits:
    cpu: 50m
    memory: 128Mi
  requests:
    cpu: 25m
    memory: 64Mi

nodeSelector: {}

tolerations: []

affinity: {}
