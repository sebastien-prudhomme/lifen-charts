version: 2
jobs:
  test:
    machine:
      image: ubuntu-1604:201903-01
    environment:
      K8S_VERSION: v1.15.7
      KUBECONFIG: /home/circleci/.kube/config
      MINIKUBE_VERSION: v1.6.2
      MINIKUBE_HOME: /home/circleci
    steps:
      - checkout
      - run:
          name: setup kubectl
          command: |
            curl -Lo kubectl https://storage.googleapis.com/kubernetes-release/release/${K8S_VERSION}/bin/linux/amd64/kubectl && chmod +x kubectl && sudo mv kubectl /usr/local/bin/
            mkdir -p ${HOME}/.kube
            touch ${HOME}/.kube/config
      - run:
          name: setup minikube
          command: |
            curl -Lo minikube https://github.com/kubernetes/minikube/releases/download/${MINIKUBE_VERSION}/minikube-linux-amd64 && chmod +x minikube && sudo mv minikube /usr/local/bin/
      - run:
          name: setup helm
          command: curl -SL https://storage.googleapis.com/kubernetes-helm/helm-v2.16.1-linux-amd64.tar.gz | tar xvz -C /tmp && sudo mv /tmp/linux-amd64/helm /usr/local/bin/helm && sudo chmod +x /usr/local/bin/helm
      - run:
          name: setup kubeval
          command: |
            curl -L https://github.com/instrumenta/kubeval/releases/download/0.14.0/kubeval-linux-amd64.tar.gz -o kubeval-linux-amd64.tar.gz
            tar xf kubeval-linux-amd64.tar.gz
            sudo mv kubeval /usr/local/bin
      - run:
          name: Execute lint on the charts
          command: |
            helm lint ./awx -f examples/awx/values.yaml
            helm lint ./kube-iptables-tailer -f examples/kube-iptables-tailer/values.yaml
            helm lint ./neuvector -f examples/neuvector/values.yaml
            helm lint ./kured -f examples/kured/values.yaml
            helm lint ./sloop -f examples/sloop/values.yaml
            helm lint ./fluent-bit -f examples/fluent-bit/values.yaml
            helm lint ./squid -f examples/squid/values.yaml
            helm lint ./teleport -f examples/teleport/values.yaml
      - run:
          name: Execute kubeval on the charts to ensure kubernetes compability with 1.15
          command: |
            helm template ./awx -f examples/awx/values.yaml | kubeval -v 1.15.4 --strict
            helm template ./kube-iptables-tailer -f examples/kube-iptables-tailer/values.yaml | kubeval -v 1.15.4 --strict
            helm template ./neuvector -f examples/neuvector/values.yaml | kubeval -v 1.15.4 --ignore-missing-schemas --strict
            helm template ./kured -f examples/kured/values.yaml | kubeval -v 1.15.4 --strict
            helm template ./sloop -f examples/sloop/values.yaml | kubeval -v 1.15.4 --strict
            helm template ./fluent-bit -f examples/fluent-bit/values.yaml | kubeval -v 1.15.4 --strict
            helm template ./squid -f examples/squid/values.yaml | kubeval -v 1.15.4 --strict
            helm template ./teleport -f examples/teleport/values.yaml | kubeval -v 1.15.4 --strict
      - run:
          name: start minikube
          command: |
            sudo minikube start --vm-driver=none --cpus 2 --memory 4096 --kubernetes-version=${K8S_VERSION} &> $HOME/minikube.log 2>&1 < /dev/null
      - run:
          name: fix permission
          command: |
            sudo chown circleci:circleci -R /home/circleci/.minikube
            sudo mkdir -p /etc/kubernetes 
            sudo chown circleci:circleci -R /etc/kubernetes
      - run:
          name: debug node
          command: |
            kubectl describe node
      - run:
          name: wait for minikube
          command: |
            JSONPATH='{range .items[*]}{@.metadata.name}:{range @.status.conditions[*]}{@.type}={@.status};{end}{end}';
            until kubectl get nodes -o jsonpath="$JSONPATH" 2>&1 | grep -q "Ready=True"; do
              sleep 1;
            done
      - run:
          name: Setup Cluster
          command: |
            ./scripts/setup_cluster.sh
      - run:
          name: Test awx installation
          command: |
            helm upgrade awx ./awx/ --install  --timeout 500 --wait -f examples/awx/values.yaml --kube-context minikube --namespace awx
      - run:
          name: Test teleport installation
          command: |
            helm upgrade teleport ./teleport/ --install  --timeout 500 --wait -f examples/teleport/values.yaml --kube-context minikube --namespace teleport
      - run:
          name: Test kube-iptables-tailer installation
          command: |
            helm upgrade kube-iptables-tailer ./kube-iptables-tailer/ --install  --timeout 500 --wait -f examples/kube-iptables-tailer/values.yaml --kube-context minikube --namespace kube-iptables-tailer
      - run:
          name: Test squid installation
          command: |
            helm upgrade squid ./squid/ --install  --timeout 500 --wait --kube-context minikube --namespace squid
      # - run:
      #     name: Test neuvector installation
      #     command: |
      #       kubectl create secret docker-registry dockerhub -n neuvector --docker-username=$DOCKERHUB_USERNAME --docker-password=$DOCKERHUB_PASSWORD
      #       helm upgrade neuvector ./neuvector/ --install  --timeout 200 --wait --kube-context minikube --namespace neuvector -f ./examples/neuvector/values.yaml
      #       helm delete --purge neuvector
      #       helm upgrade neuvector ./neuvector/ --install  --timeout 200 --wait --kube-context minikube --namespace neuvector -f ./examples/neuvector/values-custom.yaml
      # - run:
      #     name: Test kured installation
      #     command: |
      #       helm upgrade kured ./kured/ --install  --timeout 500 --wait -f examples/kured/values.yaml --kube-context minikube --namespace kured
      - run:
          name: Test sloop installation
          command: |
            helm upgrade sloop ./sloop/ --install  --timeout 500 --wait -f examples/sloop/values.yaml --kube-context minikube --namespace sloop
      - run:
          name: Test fluent-bit installation
          command: |
            helm upgrade fluent-bit ./fluent-bit/ --install  --timeout 500 --wait -f examples/fluent-bit/values.yaml --kube-context minikube --namespace fluent-bit
      - run:
          name: Debug on failures
          command: | 
            kubectl get node
            kubectl get pod --all-namespaces
            kubectl describe pod --all-namespaces
            helm list --all --kube-context minikube --namespace lifen-app-test
          when: on_fail

  release:
    docker:
      - image: circleci/python:3
    steps:
      - checkout
      - run:
          name: Install helm
          command: |
            curl -SL https://storage.googleapis.com/kubernetes-helm/helm-v2.16.1-linux-amd64.tar.gz | tar xvz -C /tmp && sudo mv /tmp/linux-amd64/helm /usr/local/bin/helm && sudo chmod +x /usr/local/bin/helm
      - add_ssh_keys:
          fingerprints:
            - "31:d4:50:ae:e8:c3:3b:3e:f4:66:48:47:7d:a0:18:a8"
      - run:
          name: Package and index doc
          command: |
            git config user.email "ops@lifen.fr"
            git config user.name "Lifen"
            git fetch origin
            git checkout -b release
            git checkout gh-pages
            git merge release  --no-edit
            helm init --client-only
            helm package kube-iptables-tailer -d packages
            helm package awx -d packages
            helm package squid -d packages
            helm package neuvector -d packages
            helm package kured -d packages
            helm package sloop -d packages
            helm package fluent-bit -d packages
            helm package teleport -d packages
            helm repo index packages --url https://honestica.github.io/lifen-charts/packages
            mv packages/index.yaml index.yaml
      - run:
          name: Push to repo
          command: |
            git add packages index.yaml
            git commit -m "relase version"
            git push origin gh-pages 

workflows:
  version: 2
  build:
    jobs:
      - test:
          filters:
            branches:
              ignore: 
                - gh-pages
                - master
          context: org-global
      - release:
          filters:
            branches:
              only: master
              ignore: gh-pages
